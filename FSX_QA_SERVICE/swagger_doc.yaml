swagger: "2.0"
info:
  title: EDP Admin API
  description: API for EDP Admin
  version: "1.0"
paths:
  /api/user/login:
    post:
      tags:
        - EDP Uses
      summary: User Login
      description: Authenticate user credentials and perform login
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              password:
                type: string
          description: JSON object containing the username and password
      responses:
        200:
          description: Login successful
        401:
          description: Unauthorized - Invalid username or password
        500:
          description: Internal Server Error
  /api/user/create:
    post:
      tags:
        - EDP Uses
      summary: Create User
      description: Create a new user with the provided details
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
              email:
                type: string
              password:
                type: string
          description: JSON object containing the user details
      responses:
        200:
          description: User created successfully
        400:
          description: Bad Request - Required fields missing or empty
        500:
          description: Internal Server Error
  /api/user/delete:
    delete:
      tags:
        - EDP Uses
      summary: Delete User
      description: Delete a user with the provided username
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              username:
                type: string
          description: JSON object containing the username
      responses:
        200:
          description: User deleted successfully
        404:
          description: User not found
        500:
          description: Internal Server Error
  /api/user/search:
    get:
      tags:
        - EDP Uses
      summary: Search User
      description: Search for users based on provided filters
      consumes:
        - application/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              id:
                type: string
              username:
                type: string
              email:
                type: string
          description: JSON object containing the search filters
      responses:
        200:
          description: User found
        404:
          description: User not found
        500:
          description: Internal Server Error
  /api/edp_regression_list/run_edp_regression:
    post:
      tags:
        - EDP Regression
      summary: Run EDP regression
      responses:
        '200':
          description: Success response
        '400':
          description: Invalid request data
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                # Define your request body properties here
                data:
                  type: string
      x-codeSamples:
        - lang: Python
          source: |
            import requests
            import json

            url = 'http://your-api-endpoint/api/edp_regression_list/run_edp_regression'
            data = {
              "data": "your_request_data"
            }
            headers = {
              'Content-Type': 'application/json'
            }
            response = requests.post(url, data=json.dumps(data), headers=headers)
            print(response.json())
  /api/edp_regression_list:
    get:
      tags:
        - EDP Regression
      summary: Get EDP regression list
      parameters:
        - in: query
          name: Source
          schema:
            type: string
          description: Filter by source
        - in: query
          name: status
          schema:
            type: string
          description: Filter by status
        - in: query
          name: startTime
          schema:
            type: string
            format: date
          description: Start time of the range
        - in: query
          name: endTime
          schema:
            type: string
            format: date
          description: End time of the range
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        taskId:
                          type: string
                        CreateTime:
                          type: string
                          format: date-time
                        CreateUser:
                          type: string
                        status:
                          type: string
                        output:
                          type: string
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                  traceback:
                    type: string
      x-codeSamples:
        - lang: Python
          source: |
            import requests

            url = 'http://your-api-endpoint/api/edp_regression_list'
            params = {
              "Source": "your_source",
              "status": "your_status",
              "startTime": "yyyy-mm-dd",
              "endTime": "yyyy-mm-dd"
            }
            response = requests.get(url, params=params)
            print(response.json())
  /api/edp_regression_list/download_log_file/{task_id}:
    get:
      tags:
        - EDP Regression
      summary: Download log file
      parameters:
        - in: path
          name: task_id
          schema:
            type: string
          required: true
          description: ID of the task
      responses:
        '200':
          description: Success response
        '400':
          description: Bad request
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: File not found
        '500':
          description: Internal server error
  /api/edp_regression_list/download_edp_report/{task_id}:
    get:
      tags:
        - EDP Regression
      summary: Download EDP report file
      parameters:
        - in: path
          name: task_id
          schema:
            type: string
          required: true
      responses:
        '200':
          description: OK
          content:
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Not Found
          content:
            text/plain:
              schema:
                type: string
        '500':
          description: Internal Server Error
          content:
            text/plain:
              schema:
                type: string
  /api/update_edp_testcases:
    post:
      tags:
        - EDP Regression
      summary: Update EDP test cases
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
      x-codeSamples:
        - lang: Python
          source: |
            import requests
            import json

            url = 'http://your-api-endpoint/api/update_edp_testcases'
            data = {
              "key1": "value1",
              "key2": "value2"
            }
            response = requests.post(url, json=data)
            print(response.json())
  /api/edp_performance_list:
    get:
      tags:
        - Performance List
      summary: Get EDP performance list
      parameters: [ ]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        createdTime:
                          type: string
                        source:
                          type: string
                        status:
                          type: string
        '500':
          description: Internal Server Error
  /api/performance_list/run_edp_performance:
    post:
      tags:
        - Performance List
      summary: Run EDP performance
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  account:
                    type: string
                  Sender:
                    type: string
                  Target:
                    type: string
                  Host:
                    type: string
                  Port:
                    type: string
                  creator:
                    type: string
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  creator:
                    type: string
                  status:
                    type: string
                  output:
                    type: string
                  start_time:
                    type: string
                  execution_time:
                    type: string
                  end_time:
                    type: string
                  type:
                    type: integer
        '400':
          description: Bad Request
        '500':
          description: Internal Server Error
  /api/performance_list/download_performance_logs:
    get:
      tags:
        - Performance List
      summary: Download performance logs
      parameters: [ ]
      responses:
        '200':
          description: Success
          content:
            application/zip:
              schema:
                type: string
                format: binary
        '400':
          description: Bad Request
        '404':
          description: File Not Found
        '500':
          description: Internal Server Error
  /api/performance_list/view_edp_performance_case:
    get:
      tags:
        - Performance List
      summary: View EDP performance case
      parameters: [ ]
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  case_count:
                    type: integer
                  file_content:
                    type: string
        '404':
          description: File Not Found
        '500':
          description: Internal Server Error